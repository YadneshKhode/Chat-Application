{"version":3,"sources":["redux/chats/chat.type.js","redux/chats/chat.reducer.js","redux/user/user.type.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","components/input/input.component.jsx","components/chat/message.component.jsx","components/chat/chat-message.component.jsx","components/infoBar/infobar.component.jsx","redux/user/user.action.js","firebase.js","payment-gateway-razorpay/razorpay.js","components/chat/chat.component.jsx","redux/chats/chats.action.js","components/sidebar-chat/sidebarchat.component.jsx","components/sidebar/sidebar.component.jsx","pages/chatpage/chatpage.component.jsx","pages/userDetailPage/userDetailPage.component.jsx","assets/images/chat.png","pages/loginpage/login.component.jsx","assets/images/404error.svg","pages/errorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ChatActionTypes","ADD_USERNAME","ADD_ROOM","ADD_CURRENT_MESSAGE","ADD_TO_MESSAGES","CLEAR_STATE","ADD_IN_USERS","initialState","username","room","message","messages","usersList","chatReducer","state","action","type","payload","UserActionTypes","LOGIN","LOGOUT","user","userReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","chat","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","Input","React","memo","setMessage","sendMessage","placeholder","value","onChange","e","target","onKeyPress","IconButton","onClick","className","Message","mess","createdAt","i","length","isSentByCurrentUser","lastMessageRef","useRef","useEffect","current","scrollIntoView","smooth","ref","ChatMessage","currentRoomMessages","filter","map","connect","props","lastCreatedAt","logout","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","loadRazorpay","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","a","res","console","log","alert","fetch","method","then","data","json","dataReceived","options","amount","currency","name","description","image","order_id","id","handler","response","razorpay_payment_id","razorpay_order_id","razorpay_signature","prefill","email","contact","notes","address","theme","color","Razorpay","open","displayRazorpay","socket","clearState","SidebarChat","displayPhoto","Avatar","alt","Chat","ENDPOINT","addUserName","addRoomName","addMessage","addMessToArr","clearChatState","addToUsers","useState","setMessages","toggle","setToggle","process","io","emit","error","off","on","fulldata","users","to","signOut","preventDefault","photo","displayName","dispatch","addCurrentMessage","addToMessages","Chatpage","addUser","addRoom","setRoom","event","required","LoginPage","signInWithPopup","catch","errorPage","withRouter","login","onAuthStateChanged","authUser","uid","photoURL","exact","path","render","component","UserDetails","ErrorPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.575e273d.chunk.js","sourcesContent":["const ChatActionTypes = {\n  ADD_USERNAME: \"ADD_USERNAME\",\n  ADD_ROOM: \"ADD_ROOM\",\n  ADD_CURRENT_MESSAGE: \"ADD_CURRENT_MESSAGE\",\n  ADD_TO_MESSAGES: \"ADD_TO_MESSAGES\",\n  CLEAR_STATE: \"CLEAR_STATE\",\n  ADD_IN_USERS: \"ADD_IN_USERS\",\n};\nexport default ChatActionTypes;\n","import ChatActionTypes from \"./chat.type\";\n\nconst initialState = {\n  username: \"\",\n  room: \"\",\n  message: \"\",\n  messages: [],\n  usersList: [],\n};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ChatActionTypes.ADD_USERNAME:\n      return {\n        ...state,\n        username: action.payload,\n      };\n    case ChatActionTypes.ADD_ROOM:\n      return {\n        ...state,\n        room: action.payload,\n      };\n    case ChatActionTypes.ADD_CURRENT_MESSAGE:\n      return {\n        ...state,\n        message: action.payload,\n      };\n    case ChatActionTypes.ADD_TO_MESSAGES:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n    case ChatActionTypes.CLEAR_STATE:\n      return {\n        username: \"\",\n        room: \"\",\n        message: \"\",\n        messages: [],\n      };\n    case ChatActionTypes.ADD_IN_USERS:\n      return {\n        ...state,\n        usersList: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;\n","const UserActionTypes = {\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n};\nexport default UserActionTypes;\n","import UserActionTypes from \"./user.type\";\n\nconst initialState = {\n  user: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UserActionTypes.LOGIN:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case UserActionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport chatReducer from \"./chats/chat.reducer\";\nimport userReducer from \"./user/user.reducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"chat\",\"user\"],\n};\n\nconst rootReducer = combineReducers({\n  chat: chatReducer,\n  user: userReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nexport const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistStore };\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nconst Input = React.memo(({ message, setMessage, sendMessage }) => {\n  // Input field of chat application calls sendMessage which is a function in parent component which emits the message to server \n  return (\n    <>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\n        />\n      </form>\n      <IconButton onClick={(e) => sendMessage(e)}>\n        <SendIcon className=\"white\" />\n      </IconButton>\n    </>\n  );\n});\n\nexport default Input;\n","import React, { useRef, useEffect } from \"react\";\nconst Message = ({\n  mess: { user, message, createdAt },\n  username,\n  i,\n  length,\n}) => {\n  let isSentByCurrentUser = false;\n\n  if (user === username) isSentByCurrentUser = true;\n\n  const lastMessageRef = useRef();\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({ smooth: true });\n    }\n  });\n\n  return isSentByCurrentUser ? (\n    <div\n      className=\"chat__message chat__receiver\"\n      ref={i === length ? lastMessageRef : null}\n    >\n      <span className=\"chat__name\">{user}</span>\n      <div className=\"chatContainer\">\n        <span className=\"chat__mess\">{message}</span>\n        <span className=\"chat__timestamp\">{createdAt}</span>\n      </div>\n    </div>\n  ) : (\n    <div className=\"chat__message\" ref={i === length ? lastMessageRef : null}>\n      <span className=\"chat__name\">{user}</span>\n      {message}\n      <span className=\"chat__timestamp\">{createdAt}</span>\n    </div>\n  );\n};\nexport default Message;\n","import React from \"react\";\nimport Message from \"./message.component\";\nimport { connect } from \"react-redux\";\n\nconst ChatMessage = React.memo(({ username, messages, room }) => {\n   // used to find the last message so I can add useRef to it and use scrolllIntoView by comparing the index and length\n  const currentRoomMessages = messages.filter(\n    (message) => message.room === room\n  );\n  const length = currentRoomMessages.length - 1;\n  return (\n    <>\n      {currentRoomMessages.map((mess, i) => (\n        <div key={i}>\n          <Message mess={mess} username={username} length={length} i={i} />\n          {/* passing index so I can compare it with length to find th elast message */}\n        </div>\n      ))}\n    </>\n  );\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.chat.username,\n    messages: state.chat.messages,\n    room: state.chat.room,\n  };\n};\n\nexport default connect(mapStateToProps)(ChatMessage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst InfoBar = (props) => {\n  const { room, messages } = props;\n\n  let lastCreatedAt;\n  //Taking timestamp of latest message and displaying it\n  messages.length > 0\n    ? (lastCreatedAt = messages[messages.length - 1].createdAt)\n    : (lastCreatedAt = \"\");\n\n  return (\n    <div className=\"chat__headerInfo\">\n      <h3 className=\"white\">\n        {room} &nbsp;\n      </h3>\n      <p className=\"white\">Last message at {lastCreatedAt}</p>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    room: state.chat.room,\n    messages: state.chat.messages,\n  };\n};\nexport default connect(mapStateToProps)(InfoBar);\n","import UserActionTypes from \"./user.type\";\n\nexport const login = (user) => ({\n  type: UserActionTypes.LOGIN,\n  payload: user,\n});\nexport const logout = () => ({\n  type: UserActionTypes.LOGOUT,\n});\n","import firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBq6aBUf_3EnNoiGHxYdc5yoniFqQ1NMmc\",\n  authDomain: \"chat-application-1ad88.firebaseapp.com\",\n  projectId: \"chat-application-1ad88\",\n  storageBucket: \"chat-application-1ad88.appspot.com\",\n  messagingSenderId: \"410508817932\",\n  appId: \"1:410508817932:web:35e04662df4676793aa029\",\n  measurementId: \"G-YCHSK7SQ8L\",\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","function loadRazorpay(src) {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.onload = () => {\r\n      resolve(true);\r\n    };\r\n    script.onerror = () => {\r\n      resolve(false);\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n\r\nasync function displayRazorpay() {\r\n  const res = await loadRazorpay(\r\n    \"https://checkout.razorpay.com/v1/checkout.js\"\r\n  );\r\n  console.log(\"halo\");\r\n  if (!res) {\r\n    alert(\"Razorpay SDK failed to load\");\r\n    return;\r\n  }\r\n  const dataReceived = await fetch(\"http://localhost:5000/razorpay\", {\r\n    method: \"POST\",\r\n  }).then((data) => data.json());\r\n\r\n  console.log(dataReceived);\r\n\r\n  const options = {\r\n    key: \"rzp_test_Vja9sKOBjy7E5Z\", // Enter the Key ID generated from the Dashboard\r\n    amount: dataReceived.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n    currency: dataReceived.currency,\r\n    name: \"Acme Corp\",\r\n    description: \"Test Transaction\",\r\n    image: \"https://example.com/your_logo\",\r\n    order_id: dataReceived.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n    handler: function (response) {\r\n      alert(\r\n        \"Payment Successful \\n Payment Id = \" +\r\n          response.razorpay_payment_id +\r\n          \" \\n Order Id = \" +\r\n          response.razorpay_order_id +\r\n          \" \\n Signature = \" +\r\n          response.razorpay_signature\r\n      );\r\n    },\r\n    prefill: {\r\n      name: \"Yadnesh Khode Creator\",\r\n      email: \"yadneshkhode@gmail.com\",\r\n      contact: \"9999999999\",\r\n    },\r\n    notes: {\r\n      address: \"Razorpay Corporate Office\",\r\n    },\r\n    theme: {\r\n      color: \"#3399cc\",\r\n    },\r\n  };\r\n  const paymentObject = new window.Razorpay(options);\r\n  paymentObject.open();\r\n}\r\n\r\nexport default displayRazorpay;\r\n","import { IconButton } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport Input from \"../input/input.component\";\nimport ChatMessage from \"./chat-message.component\";\nimport CancelRoundedIcon from \"@material-ui/icons/CancelRounded\";\nimport InfoBar from \"../infoBar/infobar.component\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../redux/user/user.action\";\nimport { auth } from \"../../firebase\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport displayRazorpay from \"../../payment-gateway-razorpay/razorpay.js\"\nimport AddIcCallIcon from '@material-ui/icons/AddIcCall';\nimport {\n  addCurrentMessage,\n  addToMessages,\n  clearState,\n  addToUsers,\n} from \"../../redux/chats/chats.action\";\nimport { connect } from \"react-redux\";\nimport SidebarChat from \"../sidebar-chat/sidebarchat.component\";\n\nlet socket;\n\nconst Chat = React.memo((props) => {\n  const {\n    addUserName,\n    addRoomName,\n    addMessage,\n    addMessToArr,\n    clearChatState,\n    logout,\n    addToUsers,\n    displayPhoto,\n    usersList,\n    email,\n    username,\n    room,\n  } = props;\n\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [toggle, setToggle] = useState([]);\n\n  let ENDPOINT;\n  if (process.env.NODE_ENV === \"development\") {\n    ENDPOINT = \"http://localhost:5000\";\n  } else {\n    ENDPOINT = process.env.REACT_APP_ENDPOINT;\n  }\n\n  useEffect(() => {\n    //getting values from URL and storing to redux state\n\n    //passing domain to \"io\"\n    socket = io(ENDPOINT);\n\n    // Transmitting the object \" { username, room, displayPhoto,e mail }\" as soon as someone joins the room\n    //The join keyword is reserved in socket.io and is executed whenever a new connection is made\n    //\"(error)=>\" is a callback function triggered from the server ( server calls this function )\n    socket.emit(\"join\", { username, room, displayPhoto, email }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n\n    return () => {\n      socket.off(\"join\"); // turn off the current connection instance.\n    };\n  }, [ENDPOINT, addRoomName, room, username, addUserName, displayPhoto, email]);\n\n  //Receiver for the message emitted by the server\n  useEffect(() => {\n    socket.on(\"message\", (fulldata) => {\n      //adding data to existing array of messages\n      setMessages([...messages, fulldata]);\n      //dispatching action to update redux state of messages\n      addMessToArr(fulldata);\n    });\n    return () => {\n      socket.off(\"message\");\n    };\n  }, [messages, addMessToArr, addToUsers]);\n  useEffect(() => {\n    //Receiver for room-data sent from server this function is executed whenever a new connection joins the room or leaves the room\n    socket.on(\"roomData\", ({ users }) => {\n      //dispatching action to updaqte redux state\n      addToUsers(users);\n    });\n    return () => {\n      socket.off(\"roomData\");\n    };\n  });\n  //Transmitter for sending messages to server\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => {\n        //setting state\n        setMessage(\"\");\n        //dispatching action\n        addMessage(\"\");\n      });\n    }\n  };\n\n  const signMeOut = () => {\n    //dispatching action to clear user object in redux\n    logout();\n    clearChatState();\n    auth.signOut();\n    //Method provided by firebase to log out the user\n  };\n\n  const toggleMe = () => {\n    //used to show / hide list of current active users in mobile view\n    if (toggle) {\n      setToggle(false);\n    } else {\n      setToggle(true);\n    }\n  };\n  const sendMoney = () => {\n    displayRazorpay();\n    console.log(\"money sent\");\n  };\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <GroupIcon className=\"groupIcon\" />\n        <IconButton>\n          <div className=\"tooltip\">\n            <FormatListBulletedIcon\n              className=\"white memberIcon\"\n              onClick={toggleMe}\n            />\n            <span className=\"tooltiptext\">Group Members</span>\n          </div>\n        </IconButton>\n        {/* <AddIcCallIcon/> */}\n        <InfoBar room={room} />\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <div className=\"tooltip\">\n              <AttachMoneyIcon className=\"white\" onClick={sendMoney} />\n              <span className=\"tooltiptext\">Send Money</span>\n            </div>\n          </IconButton>\n          <IconButton>\n            <div className=\"tooltip\">\n              <Link to=\"/room\" className=\"exit__button\">\n                <CancelRoundedIcon className=\"white\" />\n              </Link>\n              <span className=\"tooltiptext\">Exit Chat Room</span>\n            </div>\n          </IconButton>\n          <IconButton>\n            <div className=\"tooltip\">\n              <Link to=\"/\" className=\"logout__button\" onClick={signMeOut}>\n                <span className=\"tooltiptext\">Log out</span>\n                <ExitToAppIcon className=\"white\" />\n              </Link>\n            </div>\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"chat__body\">\n        {toggle ? (\n          <ChatMessage username={username} messages={messages} />\n        ) : (\n          <>\n            <div className=\"sidebar__search\">\n              <h4 className=\"userList\">Users currently online</h4>\n            </div>\n            <div className=\"sidebar__chats\">\n              {usersList ? (\n                usersList.map((user, i) => (\n                  <div key={i}>\n                    <SidebarChat\n                      username={user.username}\n                      displayPhoto={user.displayPhoto}\n                    />\n                  </div>\n                ))\n              ) : (\n                <SidebarChat />\n              )}\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"chat__footer\">\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (message) => dispatch(addCurrentMessage(message)),\n    addMessToArr: (message) => dispatch(addToMessages(message)),\n    clearChatState: () => dispatch(clearState()),\n    logout: () => dispatch(logout()),\n    addToUsers: (name) => dispatch(addToUsers(name)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    displayPhoto: state.user.user.photo,\n    photo: state.user.user.photo,\n    displayName: state.user.user.displayName,\n    usersList: state.chat.usersList,\n    email: state.user.user.email,\n    username: state.chat.username,\n    room: state.chat.room,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import ChatActionTypes from \"./chat.type\";\n\nexport const addUser = (name) => ({\n  type: ChatActionTypes.ADD_USERNAME,\n  payload: name,\n});\nexport const addRoom = (room) => ({\n  type: ChatActionTypes.ADD_ROOM,\n  payload: room,\n});\nexport const addCurrentMessage = (message) => ({\n  type: ChatActionTypes.ADD_CURRENT_MESSAGE,\n  payload: message,\n});\nexport const addToMessages = (message) => ({\n  type: ChatActionTypes.ADD_TO_MESSAGES,\n  payload: message,\n});\nexport const addToUsers = (name) => ({\n  type: ChatActionTypes.ADD_IN_USERS,\n  payload: name,\n});\nexport const clearState = () => ({\n  type: ChatActionTypes.CLEAR_STATE,\n});\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\n\n//called for each user with different props\nconst SidebarChat = (props) => {\n  const { username, displayPhoto } = props;\n\n  return (\n    <div className=\"sidebarChat\">\n      <Avatar src={displayPhoto} alt=\"profile-pic\" />\n      <div className=\"sidebar__chatInfo\">\n        <h2>{username}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarChat;\n","import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport SidebarChat from \"../sidebar-chat/sidebarchat.component\";\nimport { connect } from \"react-redux\";\n\n//displays the sidebar with users online and current user's name and profile picture\nconst Sidebar = (props) => {\n  const { photo, displayName, usersList } = props;\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={photo} alt=\"profile-pic\" />\n        <div className=\"sidebar__headerRight\">\n          <h1 className=\"displayName\">{displayName}</h1>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <h4 className=\"userList\">Group Members</h4>\n      </div>\n      <div className=\"sidebar__chats\">\n        {usersList ? (\n          usersList.map((user, i) => (\n            <div key={i}>\n              <SidebarChat\n                username={user.username}\n                displayPhoto={user.displayPhoto}\n              />\n            </div>\n          ))\n        ) : (\n          <SidebarChat />\n        )}\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    photo: state.user.user.photo,\n    displayName: state.user.user.displayName,\n    usersList: state.chat.usersList,\n  };\n};\n\nexport default connect(mapStateToProps)(Sidebar);\n","import Chat from \"../../components/chat/chat.component\";\nimport Sidebar from \"../../components/sidebar/sidebar.component\";\nimport React from \"react\";\n\nconst Chatpage = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n        <Sidebar />\n        <Chat />\n      </div>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"../../index.css\";\nimport { connect } from \"react-redux\";\nimport { addUser, addRoom } from \"../../redux/chats/chats.action\";\n\nconst UserDetails = (props) => {\n  const { username, addUserName, addRoomName } = props;\n  const [room, setRoom] = useState(\"\");\n  const saveUserNameAndRoom = () => {\n    addUserName(username);\n    addRoomName(room);\n  };\n\n  return (\n    <div className=\"centered-form\">\n      <div className=\"centered-form__box\">\n        <h1 className=\"centered-form__title\">Enter Room Name</h1>\n        <form>\n          <input\n            className=\"centered-form__input\"\n            type=\"text\"\n            placeholder=\"Room\"\n            onChange={(event) => setRoom(event.target.value)}\n            required\n          />\n          <Link\n            onClick={(e) => (!username || !room ? e.preventDefault() : null)}\n            to=\"/chat\"\n          >\n            <button\n              className=\"centered-form__button\"\n              type=\"submit\"\n              onClick={saveUserNameAndRoom}\n            >\n              Join\n            </button>\n          </Link>\n        </form>\n      </div>\n      <h1 className=\"information\"> If using mobile use Mozilla Firefox </h1>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    username: state.user.user.displayName,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addUserName: (name) => dispatch(addUser(name)),\n    addRoomName: (room) => dispatch(addRoom(room)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails);\n","export default __webpack_public_path__ + \"static/media/chat.f2145cb2.png\";","import React from \"react\";\r\nimport { auth, provider } from \"../../firebase\";\r\nimport \"./login.styles.css\";\r\nimport chat from \"../../assets/images/chat.png\";\r\n\r\nconst LoginPage = () => {\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"forms-container\">\r\n        <div className=\"signin-signup\">\r\n          <form action=\"#\" className=\"formclass sign-in-form\">\r\n            <h2 className=\"title\">Welcome to Chat-App</h2>\r\n            <input\r\n              type=\"submit\"\r\n              onClick={login}\r\n              value=\"Login with Google\"\r\n              className=\"btn solid\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"panels-container\">\r\n        <div className=\"panel left-panel\">\r\n          <img src={chat} className=\"image\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","export default __webpack_public_path__ + \"static/media/404error.4861ae77.svg\";","import React from \"react\";\r\nimport errorPage from \"../assets/images/404error.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearState } from \"../redux/chats/chats.action\";\r\nimport { logout } from \"../redux/user/user.action\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst ErrorPage = (props) => {\r\n  const { clearChatState, logout } = props;\r\n  const signMeOut = () => {\r\n    //dispatching action to clear user object in redux\r\n    clearChatState();\r\n\r\n    logout();\r\n    //Method provided by firebase to log out the user\r\n    auth.signOut();\r\n  };\r\n  return (\r\n    <div>\r\n      <img\r\n        className=\"errorPage\"\r\n        src={errorPage}\r\n        alt=\"Error 404 Page Not Found\"\r\n      />\r\n      <Link className=\"errorPage__link\" to=\"/\">\r\n        <button onClick={signMeOut}>Go To Login Page</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    clearChatState: () => dispatch(clearState()),\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(ErrorPage);\r\n","import \"./App.css\";\nimport Chatpage from \"./pages/chatpage/chatpage.component\";\nimport { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  withRouter,\n  Switch,\n} from \"react-router-dom\";\nimport UserDetails from \"./pages/userDetailPage/userDetailPage.component\";\nimport LoginPage from \"./pages/loginpage/login.component\";\nimport { connect } from \"react-redux\";\nimport { auth } from \"./firebase\";\nimport { login, logout } from \"./redux/user/user.action\";\nimport ErrorPage from \"./pages/errorPage\";\n\nfunction App(props) {\n  const { user, login, logout } = props;\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        login({\n          uid: authUser.uid,\n          photo: authUser.photoURL,\n          email: authUser.email,\n          displayName: authUser.displayName,\n        });\n      } else {\n        logout();\n      }\n    });\n  }, [login, logout]);\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (user ? <Redirect to=\"/room\" /> : <LoginPage />)}\n          />\n          <Route exact path=\"/room\" component={UserDetails} />\n          <Route exact path=\"/chat\" component={Chatpage} />\n          <Route path=\"*\" component={ErrorPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (user) => dispatch(login(user)),\n    logout: () => dispatch(logout()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\n//Chat - Application tree ( not 100% complete )\n// Chatpage\n// \tSidebar\n// \t\tSidebarChat\n// \tChat\n// \t\tInfobar\n// \t\tInput\n// \t\tChatMessage\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}